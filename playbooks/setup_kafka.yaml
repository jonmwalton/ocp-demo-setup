---

# Documentation:
# This playbook is used to deploy 3Scale, and a restful service
#
# If you would like to test out Admin portal and/or developer portal SSO based access then you have to manually
# change the SSO URL in the 3Scale Admin console - you will see that it has apps.demolab.local as the domain suffix,
# changa this to wildcard domain of your Openshift Cluster - this is because there isn't a 3Scale API to automate this change.
# Do this once the playbook has completed.
#
- name:               Create kafka demo
  hosts:              localhost
  connection:         local
  gather_facts: no

  vars_prompt:
    - name:           ocp_url
      prompt:         "Please provide your Openshift URL"
      default:        https://clarksdale.demolab.local:8443
      private:        no
    - name:           domain_name_suffix
      prompt:         "Please Enter the domain name wildcard suffix for all OCP routes"
      default:        apps.clarksdale.demolab.local
      private:        no
    - name:           git_repo
      prompt:         "Please Enter the Git repo to clone to get hold of artefacts"
      default:        https://github.com/jonmwalton/ocp-demo-setup.git
      private:        no
    - name:           clone_destination
      prompt:         "Please Enter the local destination to store the repo"
      default:        /tmp/ocpdemotmp
      private:        no

#  vars:
#    DOMAIN_NAME_SUFFIX: apps.demolab.local
#    KEYSTORE_PASSWORD: test

  tasks:

    - name: Clone base git repo from "{{git_repo}}"
      git:
        repo: "{{git_repo}}"
        dest: "{{clone_destination}}"
        version: master
        update: yes
        clone: yes


# Login to Openshift using oc client - I can't get the openshift_raw module to authenticate
#    - name:           login to Openshift at the specified URL
#      shell:          oc login {{ocp_url}} --username={{ocp_username}} --password={{ocp_password}}


    - name: Download and unzip the install files
      unarchive:
        src:  https://access.redhat.com/node/3596931/423/1
        dest: '{{clone_destination}}/amq-streams'

#####################################################
# Create AMQ Streams Cluster project
#####################################################
    - name:           Create AMQ Streams Cluster project
      k8s:
        api_version:  v1
        verify_ssl:   no
        kind:         Project
        name:         amq-streams-cluster-auto
        state:        present

#####################################################
# Create all kafka cluster artefacts
#####################################################
    - name: Modify install files
      shell: "sed -i 's/namespace: .*/namespace: amq-streams-cluster-auto/' '{{clone_destination}}/amq-streams/install/cluster-operator/*RoleBinding*.yaml'"

    - name: Install cluster operator
      k8s:
        src: '{{clone_destination}}/amq-streams/install/cluster-operator'
        state:  present
        namespace:  amq-streams-cluster-auto

    - name: Install templates
      k8s:
        src: '{{clone_destination}}/amq-streams/examples/templates/cluster-operator'
        state:  present
        namespace:  amq-streams-cluster-auto

    - name: Create kafka ephemeral
      k8s:
        src: '{{clone_destination}}/amq-streams/examples/kafka/kafka-ephemeral.yaml'
        state:  present
        namespace:  amq-streams-cluster-auto

    - name: Create kafka connect
      k8s:
        src: '{{clone_destination}}/amq-streams/examples/kafka-connect/kafka-connect.yaml'
        state:  present
        namespace:  amq-streams-cluster-auto        


# Logout of Openshift
    - name:           logout of Openshift
      shell:          oc logout

    - name: Remove git folder (cleanup)
      file:
        path: "{{clone_destination}}"
        state: absent